{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst refs = {\n  dateInput: document.querySelector('input#datetime-picker'),\n  startBtn: document.querySelector('button[data-start]'),\n  daySpan: document.querySelector('span[data-days]'),\n  hourSpan: document.querySelector('span[data-hours]'),\n  minSpan: document.querySelector('span[data-minutes]'),\n  secSpan: document.querySelector('span[data-seconds]'),\n};\n\nclass Timer {\n  constructor(onTick) {\n    this.intervalId = null;\n    this.onTick = onTick;\n  }\n\n  start() {\n    //disable DateTime input if timer started\n    refs.dateInput.disabled = true;\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now(); //this will be most likely deleted\n      //time left in ms\n      const deltaTime = userSelectedDate - currentTime;\n\n      //check if time is over and stop the timer\n      if (deltaTime <= 0) {\n        stop(intervalId);\n        return;\n      }\n\n      //converted time from ms to the object { days, hours, minutes, seconds }\n      const convertedDeltaTime = this.convertMs(deltaTime);\n\n      //add zeros before single digit numbers using addLeadingZero function\n      const time = this.addLeadingZero(convertedDeltaTime);\n\n      //output how much time left\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(intervalId);\n  }\n\n  //converts ms to the object { days, hours, minutes, seconds }\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  //adds zero before single digit numbers\n  addLeadingZero(value) {\n    const {\n      days: inputDays,\n      hours: inputHours,\n      minutes: inputMinutes,\n      seconds: inputSeconds,\n    } = value;\n    const days = inputDays.toString().padStart(2, '0');\n    const hours = inputHours.toString().padStart(2, '0');\n    const minutes = inputMinutes.toString().padStart(2, '0');\n    const seconds = inputSeconds.toString().padStart(2, '0');\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer(updateClockFace);\n\n//options for flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    //this method validates chosen date and time\n    //chosen time has to be in the future\n    if (selectedDates[0].getTime() < Date.now()) {\n      //show message if wrong date is set\n      iziToast.error({\n        class: 'izitoast-message',\n        title: 'Error',\n        titleColor: '#FFF',\n        titleSize: '16px',\n        titleLineHeight: '24px',\n        message: 'Please choose a date in the future',\n        messageColor: '#FFF',\n        messageSize: '16px',\n        messageLineHeight: '24px',\n        backgroundColor: '#EF4040',\n        color: '#FFF',\n        position: 'topRight',\n        progressBarColor: '#B51B1B',\n      });\n\n      //button disabled if date&time is in the past\n      refs.startBtn.disabled = true;\n      //saving selected datetime\n      userSelectedDate = selectedDates[0].getTime();\n      return;\n    }\n    //if true, save selected date\n    userSelectedDate = selectedDates[0].getTime();\n    //enable button\n    refs.startBtn.disabled = false;\n  },\n};\n\n//store the instance of flatpickr\nconst fp = flatpickr(refs.dateInput, options);\n\n//start button listener\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n  refs.startBtn.disabled = true;\n});\n\n//show days, hours, minutes, seconds on the web page\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n  refs.daySpan.textContent = `${days}`;\n  refs.hourSpan.textContent = `${hours}`;\n  refs.minSpan.textContent = `${minutes}`;\n  refs.secSpan.textContent = `${seconds}`;\n}\n"],"names":["userSelectedDate","refs","Timer","onTick","currentTime","deltaTime","convertedDeltaTime","time","ms","days","hours","minutes","seconds","value","inputDays","inputHours","inputMinutes","inputSeconds","timer","updateClockFace","options","selectedDates","iziToast","flatpickr"],"mappings":"2GAKA,IAAIA,EACJ,MAAMC,EAAO,CACX,UAAW,SAAS,cAAc,uBAAuB,EACzD,SAAU,SAAS,cAAc,oBAAoB,EACrD,QAAS,SAAS,cAAc,iBAAiB,EACjD,SAAU,SAAS,cAAc,kBAAkB,EACnD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEA,MAAMC,CAAM,CACV,YAAYC,EAAQ,CAClB,KAAK,WAAa,KAClB,KAAK,OAASA,CACf,CAED,OAAQ,CAENF,EAAK,UAAU,SAAW,GAC1B,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMG,EAAc,KAAK,MAEnBC,EAAYL,EAAmBI,EAGrC,GAAIC,GAAa,EAAG,CAClB,KAAK,UAAU,EACf,MACD,CAGD,MAAMC,EAAqB,KAAK,UAAUD,CAAS,EAG7CE,EAAO,KAAK,eAAeD,CAAkB,EAGnD,KAAK,OAAOC,CAAI,CACjB,EAAE,GAAI,CACR,CAED,MAAO,CACL,cAAc,UAAU,CACzB,CAGD,UAAUC,EAAI,CAQZ,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAGD,eAAeC,EAAO,CACpB,KAAM,CACJ,KAAMC,EACN,MAAOC,EACP,QAASC,EACT,QAASC,CACV,EAAGJ,EACEJ,EAAOK,EAAU,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3CJ,EAAQK,EAAW,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7CJ,EAAUK,EAAa,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjDJ,EAAUK,EAAa,SAAQ,EAAG,SAAS,EAAG,GAAG,EAEvD,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACH,CAEA,MAAMM,EAAQ,IAAIhB,EAAMiB,CAAe,EAGjCC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGrB,GAAIA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,MAAO,CAE3CC,EAAS,MAAM,CACb,MAAO,mBACP,MAAO,QACP,WAAY,OACZ,UAAW,OACX,gBAAiB,OACjB,QAAS,qCACT,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,UACjB,MAAO,OACP,SAAU,WACV,iBAAkB,SAC1B,CAAO,EAGDrB,EAAK,SAAS,SAAW,GAEzBD,EAAmBqB,EAAc,CAAC,EAAE,QAAO,EAC3C,MACD,CAEDrB,EAAmBqB,EAAc,CAAC,EAAE,QAAO,EAE3CpB,EAAK,SAAS,SAAW,EAC1B,CACH,EAGWsB,EAAUtB,EAAK,UAAWmB,CAAO,EAG5CnB,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CiB,EAAM,MAAK,EACXjB,EAAK,SAAS,SAAW,EAC3B,CAAC,EAGD,SAASkB,EAAgB,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DX,EAAK,QAAQ,YAAc,GAAGQ,CAAI,GAClCR,EAAK,SAAS,YAAc,GAAGS,CAAK,GACpCT,EAAK,QAAQ,YAAc,GAAGU,CAAO,GACrCV,EAAK,QAAQ,YAAc,GAAGW,CAAO,EACvC"}